/* You can add global styles to this file, and also import other style files */
// Color Scheme

:root {
    --color-primary: #55c57a;
    --color-primary-light: #7ed56f;
    --color-primary-dark: #28b485;
    --color-secondary-light: #ffb900;
    --color-secondary-dark: #ff7730;
    --color-tertiary-light: #2998ff;
    --color-tertiary-dark: #5643fa;
    --color-black: #777;
    --color-grey-light-1: #f7f7f7;
    --color-grey-light-2: #eee;
    --color-grey-dark: #777;
    --color-grey-dark-2: #999;
    --color-grey-dark-3: #333;
    --color-white: #fff;
}

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-secondary-light: #ffb900;
$color-secondary-dark: #ff7730;
$color-tertiary-light: #2998ff;
$color-tertiary-dark: #5643fa;


// Media Query Manager
// 0 600px -> Phone
// 600px 900px -> Tablet portrait
// 900px 1200px -> Tablet landscape
// [1200px - 1800px] -> Normal styles
// +1800px -> Big desktop

/*
    $breakpoint argument choices:
    - phone
    - tab-port
    - tab-land
    - big-desktop
*/

// 1em = 16px

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) { @content };    //1800px
    }
}

// Browser reset for all HTML elements
*, *::after, *::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    // This defines what 1rem is
    font-size: 62.5%; // By default browser has a font-size of 16px, 62.5 is equal to 10px

    @include respond(tab-land){
        font-size: 56.25; // 9px
    }

    @include respond(tab-port){
        font-size: 50%; // 8px
    }

    @include respond(big-desktop){
        font-size: 75%; // 12px
    }
}

body {
    padding: 3rem;

    // Inherited properties for all elements inside the body
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: var(--color-grey-dark);

    @include respond(tab-port){
        padding: 0;
    }
}

// GENERIC CLASSES
.container {
    display: flex;
    justify-content: center;
}

.row {
    flex: 1;
    flex-wrap: wrap;
    display: flex;
    max-width: 114rem;
    justify-content: center;
    align-items: center;
    gap: 6rem;
}

.col {
    flex: 1;

    @include respond(tab-port){
        font-size: 3rem;
        width: 100%;
    }
}

.heading-primary {
    color: var(--color-white);
    text-transform: uppercase;
    margin-bottom: 6rem;

    &--main {
        display: inline-block;
        font-size: 5rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation: moveInLeft 1.5s;

        @include respond(phone){
            letter-spacing: .5rem;
            font-size: 4.5rem;
        }

        @include respond(tab-port){
            letter-spacing: 1rem;
        }
    }

    &--secondary {
        display: inline-block;
        font-size: 1.5rem;
        font-weight: 700;
        letter-spacing: 1.5rem;
        animation: moveInRight 1.5s;

        @include respond(phone){
            letter-spacing: .5rem;
        }
    }
}

.heading-secondary { 
    display: inline-block;
    font-size: 3.5rem;
    text-transform: uppercase;
    font-weight: 700;
    background-image: linear-gradient(to right, $color-primary-light, $color-primary-dark);
    background-clip: text;
    color: transparent;
    letter-spacing: 2px;
    transition: all .5s;

    &:hover {
        transform: scale(1.05);
        text-shadow: .5rem 1rem 2rem rgba(black, .1);
    }

    @include respond(tab-port){
        font-size: 3rem;
        width: 50%;
    }

    @include respond(tab-land){
        font-size: 3rem;
        width: 60%;
    }

    @include respond(phone){
        font-size: 2.5rem;
        width: 60%;
    }
}

.heading-tertiary {
    font-size: 1.6rem;
    font-weight: 700;
    text-transform: uppercase;
}

.paragraph {
    font-size: 1.6rem;
    
    &:not(:last-child) {
        margin-bottom: 3rem;
    }
}

.center-text {
    text-align: center !important;
}

.margin-top-big {
    margin-top: 8rem !important;
}

.margin-top-huge {
    margin-top: 10rem !important;
}

.margin-bottom-big {
    margin-bottom: 8rem !important;
}

.margin-bottom-medium {
    margin-bottom: 4rem !important;
}

.margin-bottom-small {
    margin-bottom: 1.5rem !important;
}

// CUSTOM BUTTONS

.btn {
    &:link, &:visited, & {
        text-decoration: none;
        text-transform: uppercase;
        padding: 1.5rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.4rem;

        // Required by <button> elements
        border: none;
        cursor: pointer;
    }
    
    &:hover {
        transform: translateY(-0.3rem);
        box-shadow: 0 1rem 2rem rgba(var(--color-black), $alpha: 0.2);

        &::after {
            transform: scale(1.5);
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-.1rem);
        box-shadow: 0 .5rem 1rem rgba(var(--color-black), $alpha: 0.2);
    }
    
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    
    
    &--white {
        background-color: var(--color-white);
        color: var(--color-grey-dark);

        &::after {
            background-color: white;
        }
    }

    &--green {
        background-color: var(--color-primary);
        color: var(--color-white);

        &::after {
            background-color: var(--color-primary);
        }
    }
    
    &--animated {
        animation: moveInUp 1s;
    }
}

.btn-text {

    &:link, &:visited{
        font-size: 1.6rem;
        color: var(--color-primary);
        display: inline-block;
        text-decoration: none;
        // border-bottom: 1px solid var(--color-primary);
        padding: 3px;
        transition: all 0.5s;
    }

    &:hover{
        background-color: var(--color-primary);
        color: var(--color-white);
        box-shadow: 0 1rem 2rem rgba(var(--color-black), .15);
        border-radius: 100px;
        padding-left: 1rem;
        padding-right: 1rem;
        transform: translatey(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba(var(--color-black), .15);
        transform: translateY(0);
    }
}

// CUSTOM ANIMATIONS

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInUp {
    0% {
        opacity: 0;
        transform: translateY(10rem);
    }

    80% {
        transform: translateY(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}